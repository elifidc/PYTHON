R-1.1 Write a short Python function, is multiple(n, m), that takes two integer values
and returns True if n is a multiple of m, that is, n = mi for some integer i, and False
otherwise.
R-1.3 Write a short Python function, minmax(data), that takes a sequence of one or
more numbers, and returns the smallest and largest numbers, in the form of a tuple
of length two. Do not use the built-in functions min or max in implementing your
solution.
R-1.4 Write a short Python function that takes a positive integer n and returns the
sum of the squares of all the positive integers smaller than n. (without using formula)
R-1.10 What parameters should be sent to the range constructor, to produce a range
with values 8, 6, 4, 2, 0, −2, −4, −6, −8?
R-1.11 Demonstrate how to use Python’s list comprehension syntax to produce the
list [1, 2, 4, 8, 16, 32, 64, 128, 256].


#WEEK 1 HOMEWORK QUESTION 1

def multiple(x,y):
    if x % y == 0:
        return True
    else:
        return False

print(multiple(7,3))
print(multiple(10,5))
print(multiple(13,4))

#WEEK 1 HOMEWORK QUESTION 2
def minmax(data):
  aMin = data[0]
  aMax = data[0]
  for x in data:
    if x < aMin:
      aMin = x
  for x in data:
    if x > aMax:
      aMax = x
  return [aMin, aMax]

print(minmax([1]))
print(minmax([1,-34,2,4,3,3,12,435]))

#WEEK 1 HOMEWORK QUESTION 3
def sumsquares(x):
  sum = 0
  for num in range(x+1):
    if num < x:
      sum += (num**2)
  return sum

print(sumsquares(3))
print(sumsquares(15))
print(sumsquares(384))

#Note to self: Return is assigned to output variable, what you want the function to send back

#WEEK 1 HOMEWORK QUESTION 4

range(8,-9,2)
#print(x)

list(range(8,-9,-2))

#WEEK 1 HOMEWORK QUESTION 5
#Demonstrate how to use Python’s list comprehension syntax to produce the
#list [1, 2, 4, 8, 16, 32, 64, 128, 256].

my_list = []
def squarefunc(num):
  for x in range(num):
    x = 2**x
    my_list.append(x)
  return my_list
squarefunc(9)



